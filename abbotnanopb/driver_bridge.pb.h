/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_ABBOT_DRIVER_BRIDGE_PB_H_INCLUDED
#define PB_ABBOT_DRIVER_BRIDGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _abbot_DriverBridge {
    pb_callback_t alias;
    int32_t tx_queue_len;
    bool promisc;
    bool hairpin;
    bool guard;
    bool fastLeave;
    bool root_block;
    bool learning;
    bool flood;
    bool proxy_arp;
    bool proxy_arp_wifi;
} abbot_DriverBridge;


/* Initializer values for message structs */
#define abbot_DriverBridge_init_default          {{{NULL}, NULL}, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define abbot_DriverBridge_init_zero             {{{NULL}, NULL}, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define abbot_DriverBridge_alias_tag             1
#define abbot_DriverBridge_tx_queue_len_tag      2
#define abbot_DriverBridge_promisc_tag           3
#define abbot_DriverBridge_hairpin_tag           11
#define abbot_DriverBridge_guard_tag             12
#define abbot_DriverBridge_fastLeave_tag         13
#define abbot_DriverBridge_root_block_tag        14
#define abbot_DriverBridge_learning_tag          15
#define abbot_DriverBridge_flood_tag             16
#define abbot_DriverBridge_proxy_arp_tag         17
#define abbot_DriverBridge_proxy_arp_wifi_tag    18

/* Struct field encoding specification for nanopb */
#define abbot_DriverBridge_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   alias,             1) \
X(a, STATIC,   SINGULAR, INT32,    tx_queue_len,      2) \
X(a, STATIC,   SINGULAR, BOOL,     promisc,           3) \
X(a, STATIC,   SINGULAR, BOOL,     hairpin,          11) \
X(a, STATIC,   SINGULAR, BOOL,     guard,            12) \
X(a, STATIC,   SINGULAR, BOOL,     fastLeave,        13) \
X(a, STATIC,   SINGULAR, BOOL,     root_block,       14) \
X(a, STATIC,   SINGULAR, BOOL,     learning,         15) \
X(a, STATIC,   SINGULAR, BOOL,     flood,            16) \
X(a, STATIC,   SINGULAR, BOOL,     proxy_arp,        17) \
X(a, STATIC,   SINGULAR, BOOL,     proxy_arp_wifi,   18)
#define abbot_DriverBridge_CALLBACK pb_default_field_callback
#define abbot_DriverBridge_DEFAULT NULL

extern const pb_msgdesc_t abbot_DriverBridge_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define abbot_DriverBridge_fields &abbot_DriverBridge_msg

/* Maximum encoded size of messages (where known) */
/* abbot_DriverBridge_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
