# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: container.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from github.com.gogo.protobuf.gogoproto import gogo_pb2 as github_dot_com_dot_gogo_dot_protobuf_dot_gogoproto_dot_gogo__pb2
import meta_pb2 as meta__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='container.proto',
  package='abbot',
  syntax='proto3',
  serialized_options=b'Z\037arhat.dev/abbot-proto/abbotgopb',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0f\x63ontainer.proto\x12\x05\x61\x62\x62ot\x1a-github.com/gogo/protobuf/gogoproto/gogo.proto\x1a\nmeta.proto\"\xc9\n\n\nCNICapArgs\x12\x31\n\x0cport_map_arg\x18\x01 \x01(\x0b\x32\x19.abbot.CNICapArgs.PortMapH\x00\x12\x34\n\rbandwidth_arg\x18\x02 \x01(\x0b\x32\x1b.abbot.CNICapArgs.BandwidthH\x00\x12\x31\n\x0cip_range_arg\x18\x03 \x01(\x0b\x32\x19.abbot.CNICapArgs.IPRangeH\x00\x12\x35\n\x0e\x64ns_config_arg\x18\x04 \x01(\x0b\x32\x1b.abbot.CNICapArgs.DNSConfigH\x00\x12\x39\n\x10ip_addresses_arg\x18\x05 \x01(\x0b\x32\x1d.abbot.CNICapArgs.IPAddressesH\x00\x12\x37\n\x0fmac_address_arg\x18\x06 \x01(\x0b\x32\x1c.abbot.CNICapArgs.MacAddressH\x00\x12?\n\x13infiniband_guid_arg\x18\x07 \x01(\x0b\x32 .abbot.CNICapArgs.InfinibandGUIDH\x00\x12\x33\n\rdevice_id_arg\x18\x08 \x01(\x0b\x32\x1a.abbot.CNICapArgs.DeviceIDH\x00\x1a\x92\x01\n\x07PortMap\x12)\n\x0e\x63ontainer_port\x18\x01 \x01(\x05\x42\x11\xea\xde\x1f\rcontainerPort\x12\x1f\n\thost_port\x18\x02 \x01(\x05\x42\x0c\xea\xde\x1f\x08hostPort\x12\x1e\n\x08protocol\x18\x03 \x01(\tB\x0c\xea\xde\x1f\x08protocol\x12\x1b\n\x07host_ip\x18\x04 \x01(\tB\n\xea\xde\x1f\x06hostIP\x1a\xcf\x01\n\tBandwidth\x12/\n\x0cingress_rate\x18\x01 \x01(\x05\x42\x19\xea\xde\x1f\x15ingressRate,omitempty\x12\x31\n\ringress_burst\x18\x02 \x01(\x05\x42\x1a\xea\xde\x1f\x16ingressBurst,omitempty\x12-\n\x0b\x65gress_rate\x18\x03 \x01(\x05\x42\x18\xea\xde\x1f\x14\x65gressRate,omitempty\x12/\n\x0c\x65gress_burst\x18\x04 \x01(\x05\x42\x19\xea\xde\x1f\x15\x65gressBurst,omitempty\x1a\xa7\x01\n\x07IPRange\x12\x1a\n\x06subnet\x18\x01 \x01(\tB\n\xea\xde\x1f\x06subnet\x12-\n\x0brange_start\x18\x02 \x01(\tB\x18\xea\xde\x1f\x14rangeStart,omitempty\x12)\n\trange_end\x18\x03 \x01(\tB\x16\xea\xde\x1f\x12rangeEnd,omitempty\x12&\n\x07gateway\x18\x04 \x01(\tB\x15\xea\xde\x1f\x11gateway,omitempty\x1a\x85\x01\n\tDNSConfig\x12&\n\x07servers\x18\x01 \x03(\tB\x15\xea\xde\x1f\x11servers,omitempty\x12(\n\x08searches\x18\x02 \x03(\tB\x16\xea\xde\x1f\x12searches,omitempty\x12&\n\x07options\x18\x03 \x03(\tB\x15\xea\xde\x1f\x11options,omitempty\x1a-\n\x0bIPAddresses\x12\x1e\n\x03ips\x18\x01 \x03(\tB\x11\xea\xde\x1f\rips,omitempty\x1a,\n\nMacAddress\x12\x1e\n\x03mac\x18\x01 \x01(\tB\x11\xea\xde\x1f\rmac,omitempty\x1aG\n\x0eInfinibandGUID\x12\x35\n\x0finfiniband_guid\x18\x01 \x01(\tB\x1c\xea\xde\x1f\x18infinibandGUID,omitempty\x1a\x35\n\x08\x44\x65viceID\x12)\n\tdevice_id\x18\x01 \x01(\tB\x16\xea\xde\x1f\x12\x64\x65viceID,omitemptyB\x08\n\x06option\"\xdc\x01\n\x1d\x43ontainerNetworkEnsureRequest\x12\x14\n\x0c\x63ontainer_id\x18\x01 \x01(\t\x12\x0b\n\x03pid\x18\x02 \x01(\r\x12#\n\x08\x63\x61p_args\x18\x03 \x03(\x0b\x32\x11.abbot.CNICapArgs\x12\x43\n\x08\x63ni_args\x18\x04 \x03(\x0b\x32\x31.abbot.ContainerNetworkEnsureRequest.CniArgsEntry\x1a.\n\x0c\x43niArgsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"C\n\x1e\x43ontainerNetworkRestoreRequest\x12\x14\n\x0c\x63ontainer_id\x18\x01 \x01(\t\x12\x0b\n\x03pid\x18\x02 \x01(\r\"B\n\x1d\x43ontainerNetworkDeleteRequest\x12\x14\n\x0c\x63ontainer_id\x18\x01 \x01(\t\x12\x0b\n\x03pid\x18\x02 \x01(\r\"O\n#ContainerNetworkConfigEnsureRequest\x12\x13\n\x0bipv4_subnet\x18\x01 \x01(\t\x12\x13\n\x0bipv6_subnet\x18\x02 \x01(\t\"A\n\x1c\x43ontainerNetworkQueryRequest\x12\x14\n\x0c\x63ontainer_id\x18\x01 \x01(\t\x12\x0b\n\x03pid\x18\x02 \x01(\r\"Z\n\x1e\x43ontainerNetworkStatusResponse\x12\x0b\n\x03pid\x18\x01 \x01(\r\x12+\n\ninterfaces\x18\x02 \x03(\x0b\x32\x17.abbot.NetworkInterface\"\xe3\x01\n\"ContainerNetworkStatusListResponse\x12\\\n\x12\x63ontainer_networks\x18\x01 \x03(\x0b\x32@.abbot.ContainerNetworkStatusListResponse.ContainerNetworksEntry\x1a_\n\x16\x43ontainerNetworksEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x34\n\x05value\x18\x02 \x01(\x0b\x32%.abbot.ContainerNetworkStatusResponse:\x02\x38\x01\x42!Z\x1f\x61rhat.dev/abbot-proto/abbotgopbb\x06proto3'
  ,
  dependencies=[github_dot_com_dot_gogo_dot_protobuf_dot_gogoproto_dot_gogo__pb2.DESCRIPTOR,meta__pb2.DESCRIPTOR,])




_CNICAPARGS_PORTMAP = _descriptor.Descriptor(
  name='PortMap',
  full_name='abbot.CNICapArgs.PortMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='container_port', full_name='abbot.CNICapArgs.PortMap.container_port', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\rcontainerPort', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='host_port', full_name='abbot.CNICapArgs.PortMap.host_port', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\010hostPort', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='protocol', full_name='abbot.CNICapArgs.PortMap.protocol', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\010protocol', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='host_ip', full_name='abbot.CNICapArgs.PortMap.host_ip', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\006hostIP', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=546,
  serialized_end=692,
)

_CNICAPARGS_BANDWIDTH = _descriptor.Descriptor(
  name='Bandwidth',
  full_name='abbot.CNICapArgs.Bandwidth',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ingress_rate', full_name='abbot.CNICapArgs.Bandwidth.ingress_rate', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\025ingressRate,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ingress_burst', full_name='abbot.CNICapArgs.Bandwidth.ingress_burst', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\026ingressBurst,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='egress_rate', full_name='abbot.CNICapArgs.Bandwidth.egress_rate', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\024egressRate,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='egress_burst', full_name='abbot.CNICapArgs.Bandwidth.egress_burst', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\025egressBurst,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=695,
  serialized_end=902,
)

_CNICAPARGS_IPRANGE = _descriptor.Descriptor(
  name='IPRange',
  full_name='abbot.CNICapArgs.IPRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='subnet', full_name='abbot.CNICapArgs.IPRange.subnet', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\006subnet', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='range_start', full_name='abbot.CNICapArgs.IPRange.range_start', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\024rangeStart,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='range_end', full_name='abbot.CNICapArgs.IPRange.range_end', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\022rangeEnd,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gateway', full_name='abbot.CNICapArgs.IPRange.gateway', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\021gateway,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=905,
  serialized_end=1072,
)

_CNICAPARGS_DNSCONFIG = _descriptor.Descriptor(
  name='DNSConfig',
  full_name='abbot.CNICapArgs.DNSConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='servers', full_name='abbot.CNICapArgs.DNSConfig.servers', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\021servers,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='searches', full_name='abbot.CNICapArgs.DNSConfig.searches', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\022searches,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='options', full_name='abbot.CNICapArgs.DNSConfig.options', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\021options,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1075,
  serialized_end=1208,
)

_CNICAPARGS_IPADDRESSES = _descriptor.Descriptor(
  name='IPAddresses',
  full_name='abbot.CNICapArgs.IPAddresses',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ips', full_name='abbot.CNICapArgs.IPAddresses.ips', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\rips,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1210,
  serialized_end=1255,
)

_CNICAPARGS_MACADDRESS = _descriptor.Descriptor(
  name='MacAddress',
  full_name='abbot.CNICapArgs.MacAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='mac', full_name='abbot.CNICapArgs.MacAddress.mac', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\rmac,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1257,
  serialized_end=1301,
)

_CNICAPARGS_INFINIBANDGUID = _descriptor.Descriptor(
  name='InfinibandGUID',
  full_name='abbot.CNICapArgs.InfinibandGUID',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='infiniband_guid', full_name='abbot.CNICapArgs.InfinibandGUID.infiniband_guid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\030infinibandGUID,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1303,
  serialized_end=1374,
)

_CNICAPARGS_DEVICEID = _descriptor.Descriptor(
  name='DeviceID',
  full_name='abbot.CNICapArgs.DeviceID',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_id', full_name='abbot.CNICapArgs.DeviceID.device_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\352\336\037\022deviceID,omitempty', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1376,
  serialized_end=1429,
)

_CNICAPARGS = _descriptor.Descriptor(
  name='CNICapArgs',
  full_name='abbot.CNICapArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='port_map_arg', full_name='abbot.CNICapArgs.port_map_arg', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bandwidth_arg', full_name='abbot.CNICapArgs.bandwidth_arg', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ip_range_arg', full_name='abbot.CNICapArgs.ip_range_arg', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dns_config_arg', full_name='abbot.CNICapArgs.dns_config_arg', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ip_addresses_arg', full_name='abbot.CNICapArgs.ip_addresses_arg', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mac_address_arg', full_name='abbot.CNICapArgs.mac_address_arg', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='infiniband_guid_arg', full_name='abbot.CNICapArgs.infiniband_guid_arg', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='device_id_arg', full_name='abbot.CNICapArgs.device_id_arg', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_CNICAPARGS_PORTMAP, _CNICAPARGS_BANDWIDTH, _CNICAPARGS_IPRANGE, _CNICAPARGS_DNSCONFIG, _CNICAPARGS_IPADDRESSES, _CNICAPARGS_MACADDRESS, _CNICAPARGS_INFINIBANDGUID, _CNICAPARGS_DEVICEID, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='option', full_name='abbot.CNICapArgs.option',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=86,
  serialized_end=1439,
)


_CONTAINERNETWORKENSUREREQUEST_CNIARGSENTRY = _descriptor.Descriptor(
  name='CniArgsEntry',
  full_name='abbot.ContainerNetworkEnsureRequest.CniArgsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='abbot.ContainerNetworkEnsureRequest.CniArgsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='abbot.ContainerNetworkEnsureRequest.CniArgsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1616,
  serialized_end=1662,
)

_CONTAINERNETWORKENSUREREQUEST = _descriptor.Descriptor(
  name='ContainerNetworkEnsureRequest',
  full_name='abbot.ContainerNetworkEnsureRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='container_id', full_name='abbot.ContainerNetworkEnsureRequest.container_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pid', full_name='abbot.ContainerNetworkEnsureRequest.pid', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cap_args', full_name='abbot.ContainerNetworkEnsureRequest.cap_args', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cni_args', full_name='abbot.ContainerNetworkEnsureRequest.cni_args', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_CONTAINERNETWORKENSUREREQUEST_CNIARGSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1442,
  serialized_end=1662,
)


_CONTAINERNETWORKRESTOREREQUEST = _descriptor.Descriptor(
  name='ContainerNetworkRestoreRequest',
  full_name='abbot.ContainerNetworkRestoreRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='container_id', full_name='abbot.ContainerNetworkRestoreRequest.container_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pid', full_name='abbot.ContainerNetworkRestoreRequest.pid', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1664,
  serialized_end=1731,
)


_CONTAINERNETWORKDELETEREQUEST = _descriptor.Descriptor(
  name='ContainerNetworkDeleteRequest',
  full_name='abbot.ContainerNetworkDeleteRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='container_id', full_name='abbot.ContainerNetworkDeleteRequest.container_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pid', full_name='abbot.ContainerNetworkDeleteRequest.pid', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1733,
  serialized_end=1799,
)


_CONTAINERNETWORKCONFIGENSUREREQUEST = _descriptor.Descriptor(
  name='ContainerNetworkConfigEnsureRequest',
  full_name='abbot.ContainerNetworkConfigEnsureRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ipv4_subnet', full_name='abbot.ContainerNetworkConfigEnsureRequest.ipv4_subnet', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ipv6_subnet', full_name='abbot.ContainerNetworkConfigEnsureRequest.ipv6_subnet', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1801,
  serialized_end=1880,
)


_CONTAINERNETWORKQUERYREQUEST = _descriptor.Descriptor(
  name='ContainerNetworkQueryRequest',
  full_name='abbot.ContainerNetworkQueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='container_id', full_name='abbot.ContainerNetworkQueryRequest.container_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='pid', full_name='abbot.ContainerNetworkQueryRequest.pid', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1882,
  serialized_end=1947,
)


_CONTAINERNETWORKSTATUSRESPONSE = _descriptor.Descriptor(
  name='ContainerNetworkStatusResponse',
  full_name='abbot.ContainerNetworkStatusResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='pid', full_name='abbot.ContainerNetworkStatusResponse.pid', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='interfaces', full_name='abbot.ContainerNetworkStatusResponse.interfaces', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1949,
  serialized_end=2039,
)


_CONTAINERNETWORKSTATUSLISTRESPONSE_CONTAINERNETWORKSENTRY = _descriptor.Descriptor(
  name='ContainerNetworksEntry',
  full_name='abbot.ContainerNetworkStatusListResponse.ContainerNetworksEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='abbot.ContainerNetworkStatusListResponse.ContainerNetworksEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='abbot.ContainerNetworkStatusListResponse.ContainerNetworksEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2174,
  serialized_end=2269,
)

_CONTAINERNETWORKSTATUSLISTRESPONSE = _descriptor.Descriptor(
  name='ContainerNetworkStatusListResponse',
  full_name='abbot.ContainerNetworkStatusListResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='container_networks', full_name='abbot.ContainerNetworkStatusListResponse.container_networks', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_CONTAINERNETWORKSTATUSLISTRESPONSE_CONTAINERNETWORKSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2042,
  serialized_end=2269,
)

_CNICAPARGS_PORTMAP.containing_type = _CNICAPARGS
_CNICAPARGS_BANDWIDTH.containing_type = _CNICAPARGS
_CNICAPARGS_IPRANGE.containing_type = _CNICAPARGS
_CNICAPARGS_DNSCONFIG.containing_type = _CNICAPARGS
_CNICAPARGS_IPADDRESSES.containing_type = _CNICAPARGS
_CNICAPARGS_MACADDRESS.containing_type = _CNICAPARGS
_CNICAPARGS_INFINIBANDGUID.containing_type = _CNICAPARGS
_CNICAPARGS_DEVICEID.containing_type = _CNICAPARGS
_CNICAPARGS.fields_by_name['port_map_arg'].message_type = _CNICAPARGS_PORTMAP
_CNICAPARGS.fields_by_name['bandwidth_arg'].message_type = _CNICAPARGS_BANDWIDTH
_CNICAPARGS.fields_by_name['ip_range_arg'].message_type = _CNICAPARGS_IPRANGE
_CNICAPARGS.fields_by_name['dns_config_arg'].message_type = _CNICAPARGS_DNSCONFIG
_CNICAPARGS.fields_by_name['ip_addresses_arg'].message_type = _CNICAPARGS_IPADDRESSES
_CNICAPARGS.fields_by_name['mac_address_arg'].message_type = _CNICAPARGS_MACADDRESS
_CNICAPARGS.fields_by_name['infiniband_guid_arg'].message_type = _CNICAPARGS_INFINIBANDGUID
_CNICAPARGS.fields_by_name['device_id_arg'].message_type = _CNICAPARGS_DEVICEID
_CNICAPARGS.oneofs_by_name['option'].fields.append(
  _CNICAPARGS.fields_by_name['port_map_arg'])
_CNICAPARGS.fields_by_name['port_map_arg'].containing_oneof = _CNICAPARGS.oneofs_by_name['option']
_CNICAPARGS.oneofs_by_name['option'].fields.append(
  _CNICAPARGS.fields_by_name['bandwidth_arg'])
_CNICAPARGS.fields_by_name['bandwidth_arg'].containing_oneof = _CNICAPARGS.oneofs_by_name['option']
_CNICAPARGS.oneofs_by_name['option'].fields.append(
  _CNICAPARGS.fields_by_name['ip_range_arg'])
_CNICAPARGS.fields_by_name['ip_range_arg'].containing_oneof = _CNICAPARGS.oneofs_by_name['option']
_CNICAPARGS.oneofs_by_name['option'].fields.append(
  _CNICAPARGS.fields_by_name['dns_config_arg'])
_CNICAPARGS.fields_by_name['dns_config_arg'].containing_oneof = _CNICAPARGS.oneofs_by_name['option']
_CNICAPARGS.oneofs_by_name['option'].fields.append(
  _CNICAPARGS.fields_by_name['ip_addresses_arg'])
_CNICAPARGS.fields_by_name['ip_addresses_arg'].containing_oneof = _CNICAPARGS.oneofs_by_name['option']
_CNICAPARGS.oneofs_by_name['option'].fields.append(
  _CNICAPARGS.fields_by_name['mac_address_arg'])
_CNICAPARGS.fields_by_name['mac_address_arg'].containing_oneof = _CNICAPARGS.oneofs_by_name['option']
_CNICAPARGS.oneofs_by_name['option'].fields.append(
  _CNICAPARGS.fields_by_name['infiniband_guid_arg'])
_CNICAPARGS.fields_by_name['infiniband_guid_arg'].containing_oneof = _CNICAPARGS.oneofs_by_name['option']
_CNICAPARGS.oneofs_by_name['option'].fields.append(
  _CNICAPARGS.fields_by_name['device_id_arg'])
_CNICAPARGS.fields_by_name['device_id_arg'].containing_oneof = _CNICAPARGS.oneofs_by_name['option']
_CONTAINERNETWORKENSUREREQUEST_CNIARGSENTRY.containing_type = _CONTAINERNETWORKENSUREREQUEST
_CONTAINERNETWORKENSUREREQUEST.fields_by_name['cap_args'].message_type = _CNICAPARGS
_CONTAINERNETWORKENSUREREQUEST.fields_by_name['cni_args'].message_type = _CONTAINERNETWORKENSUREREQUEST_CNIARGSENTRY
_CONTAINERNETWORKSTATUSRESPONSE.fields_by_name['interfaces'].message_type = meta__pb2._NETWORKINTERFACE
_CONTAINERNETWORKSTATUSLISTRESPONSE_CONTAINERNETWORKSENTRY.fields_by_name['value'].message_type = _CONTAINERNETWORKSTATUSRESPONSE
_CONTAINERNETWORKSTATUSLISTRESPONSE_CONTAINERNETWORKSENTRY.containing_type = _CONTAINERNETWORKSTATUSLISTRESPONSE
_CONTAINERNETWORKSTATUSLISTRESPONSE.fields_by_name['container_networks'].message_type = _CONTAINERNETWORKSTATUSLISTRESPONSE_CONTAINERNETWORKSENTRY
DESCRIPTOR.message_types_by_name['CNICapArgs'] = _CNICAPARGS
DESCRIPTOR.message_types_by_name['ContainerNetworkEnsureRequest'] = _CONTAINERNETWORKENSUREREQUEST
DESCRIPTOR.message_types_by_name['ContainerNetworkRestoreRequest'] = _CONTAINERNETWORKRESTOREREQUEST
DESCRIPTOR.message_types_by_name['ContainerNetworkDeleteRequest'] = _CONTAINERNETWORKDELETEREQUEST
DESCRIPTOR.message_types_by_name['ContainerNetworkConfigEnsureRequest'] = _CONTAINERNETWORKCONFIGENSUREREQUEST
DESCRIPTOR.message_types_by_name['ContainerNetworkQueryRequest'] = _CONTAINERNETWORKQUERYREQUEST
DESCRIPTOR.message_types_by_name['ContainerNetworkStatusResponse'] = _CONTAINERNETWORKSTATUSRESPONSE
DESCRIPTOR.message_types_by_name['ContainerNetworkStatusListResponse'] = _CONTAINERNETWORKSTATUSLISTRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CNICapArgs = _reflection.GeneratedProtocolMessageType('CNICapArgs', (_message.Message,), {

  'PortMap' : _reflection.GeneratedProtocolMessageType('PortMap', (_message.Message,), {
    'DESCRIPTOR' : _CNICAPARGS_PORTMAP,
    '__module__' : 'container_pb2'
    # @@protoc_insertion_point(class_scope:abbot.CNICapArgs.PortMap)
    })
  ,

  'Bandwidth' : _reflection.GeneratedProtocolMessageType('Bandwidth', (_message.Message,), {
    'DESCRIPTOR' : _CNICAPARGS_BANDWIDTH,
    '__module__' : 'container_pb2'
    # @@protoc_insertion_point(class_scope:abbot.CNICapArgs.Bandwidth)
    })
  ,

  'IPRange' : _reflection.GeneratedProtocolMessageType('IPRange', (_message.Message,), {
    'DESCRIPTOR' : _CNICAPARGS_IPRANGE,
    '__module__' : 'container_pb2'
    # @@protoc_insertion_point(class_scope:abbot.CNICapArgs.IPRange)
    })
  ,

  'DNSConfig' : _reflection.GeneratedProtocolMessageType('DNSConfig', (_message.Message,), {
    'DESCRIPTOR' : _CNICAPARGS_DNSCONFIG,
    '__module__' : 'container_pb2'
    # @@protoc_insertion_point(class_scope:abbot.CNICapArgs.DNSConfig)
    })
  ,

  'IPAddresses' : _reflection.GeneratedProtocolMessageType('IPAddresses', (_message.Message,), {
    'DESCRIPTOR' : _CNICAPARGS_IPADDRESSES,
    '__module__' : 'container_pb2'
    # @@protoc_insertion_point(class_scope:abbot.CNICapArgs.IPAddresses)
    })
  ,

  'MacAddress' : _reflection.GeneratedProtocolMessageType('MacAddress', (_message.Message,), {
    'DESCRIPTOR' : _CNICAPARGS_MACADDRESS,
    '__module__' : 'container_pb2'
    # @@protoc_insertion_point(class_scope:abbot.CNICapArgs.MacAddress)
    })
  ,

  'InfinibandGUID' : _reflection.GeneratedProtocolMessageType('InfinibandGUID', (_message.Message,), {
    'DESCRIPTOR' : _CNICAPARGS_INFINIBANDGUID,
    '__module__' : 'container_pb2'
    # @@protoc_insertion_point(class_scope:abbot.CNICapArgs.InfinibandGUID)
    })
  ,

  'DeviceID' : _reflection.GeneratedProtocolMessageType('DeviceID', (_message.Message,), {
    'DESCRIPTOR' : _CNICAPARGS_DEVICEID,
    '__module__' : 'container_pb2'
    # @@protoc_insertion_point(class_scope:abbot.CNICapArgs.DeviceID)
    })
  ,
  'DESCRIPTOR' : _CNICAPARGS,
  '__module__' : 'container_pb2'
  # @@protoc_insertion_point(class_scope:abbot.CNICapArgs)
  })
_sym_db.RegisterMessage(CNICapArgs)
_sym_db.RegisterMessage(CNICapArgs.PortMap)
_sym_db.RegisterMessage(CNICapArgs.Bandwidth)
_sym_db.RegisterMessage(CNICapArgs.IPRange)
_sym_db.RegisterMessage(CNICapArgs.DNSConfig)
_sym_db.RegisterMessage(CNICapArgs.IPAddresses)
_sym_db.RegisterMessage(CNICapArgs.MacAddress)
_sym_db.RegisterMessage(CNICapArgs.InfinibandGUID)
_sym_db.RegisterMessage(CNICapArgs.DeviceID)

ContainerNetworkEnsureRequest = _reflection.GeneratedProtocolMessageType('ContainerNetworkEnsureRequest', (_message.Message,), {

  'CniArgsEntry' : _reflection.GeneratedProtocolMessageType('CniArgsEntry', (_message.Message,), {
    'DESCRIPTOR' : _CONTAINERNETWORKENSUREREQUEST_CNIARGSENTRY,
    '__module__' : 'container_pb2'
    # @@protoc_insertion_point(class_scope:abbot.ContainerNetworkEnsureRequest.CniArgsEntry)
    })
  ,
  'DESCRIPTOR' : _CONTAINERNETWORKENSUREREQUEST,
  '__module__' : 'container_pb2'
  # @@protoc_insertion_point(class_scope:abbot.ContainerNetworkEnsureRequest)
  })
_sym_db.RegisterMessage(ContainerNetworkEnsureRequest)
_sym_db.RegisterMessage(ContainerNetworkEnsureRequest.CniArgsEntry)

ContainerNetworkRestoreRequest = _reflection.GeneratedProtocolMessageType('ContainerNetworkRestoreRequest', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERNETWORKRESTOREREQUEST,
  '__module__' : 'container_pb2'
  # @@protoc_insertion_point(class_scope:abbot.ContainerNetworkRestoreRequest)
  })
_sym_db.RegisterMessage(ContainerNetworkRestoreRequest)

ContainerNetworkDeleteRequest = _reflection.GeneratedProtocolMessageType('ContainerNetworkDeleteRequest', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERNETWORKDELETEREQUEST,
  '__module__' : 'container_pb2'
  # @@protoc_insertion_point(class_scope:abbot.ContainerNetworkDeleteRequest)
  })
_sym_db.RegisterMessage(ContainerNetworkDeleteRequest)

ContainerNetworkConfigEnsureRequest = _reflection.GeneratedProtocolMessageType('ContainerNetworkConfigEnsureRequest', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERNETWORKCONFIGENSUREREQUEST,
  '__module__' : 'container_pb2'
  # @@protoc_insertion_point(class_scope:abbot.ContainerNetworkConfigEnsureRequest)
  })
_sym_db.RegisterMessage(ContainerNetworkConfigEnsureRequest)

ContainerNetworkQueryRequest = _reflection.GeneratedProtocolMessageType('ContainerNetworkQueryRequest', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERNETWORKQUERYREQUEST,
  '__module__' : 'container_pb2'
  # @@protoc_insertion_point(class_scope:abbot.ContainerNetworkQueryRequest)
  })
_sym_db.RegisterMessage(ContainerNetworkQueryRequest)

ContainerNetworkStatusResponse = _reflection.GeneratedProtocolMessageType('ContainerNetworkStatusResponse', (_message.Message,), {
  'DESCRIPTOR' : _CONTAINERNETWORKSTATUSRESPONSE,
  '__module__' : 'container_pb2'
  # @@protoc_insertion_point(class_scope:abbot.ContainerNetworkStatusResponse)
  })
_sym_db.RegisterMessage(ContainerNetworkStatusResponse)

ContainerNetworkStatusListResponse = _reflection.GeneratedProtocolMessageType('ContainerNetworkStatusListResponse', (_message.Message,), {

  'ContainerNetworksEntry' : _reflection.GeneratedProtocolMessageType('ContainerNetworksEntry', (_message.Message,), {
    'DESCRIPTOR' : _CONTAINERNETWORKSTATUSLISTRESPONSE_CONTAINERNETWORKSENTRY,
    '__module__' : 'container_pb2'
    # @@protoc_insertion_point(class_scope:abbot.ContainerNetworkStatusListResponse.ContainerNetworksEntry)
    })
  ,
  'DESCRIPTOR' : _CONTAINERNETWORKSTATUSLISTRESPONSE,
  '__module__' : 'container_pb2'
  # @@protoc_insertion_point(class_scope:abbot.ContainerNetworkStatusListResponse)
  })
_sym_db.RegisterMessage(ContainerNetworkStatusListResponse)
_sym_db.RegisterMessage(ContainerNetworkStatusListResponse.ContainerNetworksEntry)


DESCRIPTOR._options = None
_CNICAPARGS_PORTMAP.fields_by_name['container_port']._options = None
_CNICAPARGS_PORTMAP.fields_by_name['host_port']._options = None
_CNICAPARGS_PORTMAP.fields_by_name['protocol']._options = None
_CNICAPARGS_PORTMAP.fields_by_name['host_ip']._options = None
_CNICAPARGS_BANDWIDTH.fields_by_name['ingress_rate']._options = None
_CNICAPARGS_BANDWIDTH.fields_by_name['ingress_burst']._options = None
_CNICAPARGS_BANDWIDTH.fields_by_name['egress_rate']._options = None
_CNICAPARGS_BANDWIDTH.fields_by_name['egress_burst']._options = None
_CNICAPARGS_IPRANGE.fields_by_name['subnet']._options = None
_CNICAPARGS_IPRANGE.fields_by_name['range_start']._options = None
_CNICAPARGS_IPRANGE.fields_by_name['range_end']._options = None
_CNICAPARGS_IPRANGE.fields_by_name['gateway']._options = None
_CNICAPARGS_DNSCONFIG.fields_by_name['servers']._options = None
_CNICAPARGS_DNSCONFIG.fields_by_name['searches']._options = None
_CNICAPARGS_DNSCONFIG.fields_by_name['options']._options = None
_CNICAPARGS_IPADDRESSES.fields_by_name['ips']._options = None
_CNICAPARGS_MACADDRESS.fields_by_name['mac']._options = None
_CNICAPARGS_INFINIBANDGUID.fields_by_name['infiniband_guid']._options = None
_CNICAPARGS_DEVICEID.fields_by_name['device_id']._options = None
_CONTAINERNETWORKENSUREREQUEST_CNIARGSENTRY._options = None
_CONTAINERNETWORKSTATUSLISTRESPONSE_CONTAINERNETWORKSENTRY._options = None
# @@protoc_insertion_point(module_scope)
